service: lab4all-auth

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  environment:
    # Cognito
    USER_POOL_ID: us-east-1_R8nus0NoJ
    CLIENT_ID: 5ioefbupk9cl6eikb46aqqqn57
    # Dynamo tables (use these in code instead of hardcoded names)
    CLASSROOMS_TABLE: classrooms
    MEMBERSHIPS_TABLE: memberships
    SCHOOLS_TABLE: schools
    # Feature flags (optional)
    STRICT_SCHOOL_SIGNUP: 'true'
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:Query
        - dynamodb:TransactWriteItems
        - dynamodb:DeleteItem
      Resource:
        # classrooms
        - arn:aws:dynamodb:${self:provider.region}:${aws:accountId}:table/classrooms
        - arn:aws:dynamodb:${self:provider.region}:${aws:accountId}:table/classrooms/index/joinCode-index
        # memberships
        - arn:aws:dynamodb:${self:provider.region}:${aws:accountId}:table/memberships
        # schools (+ GSIs for browse/search)
        - arn:aws:dynamodb:${self:provider.region}:${aws:accountId}:table/schools
        - arn:aws:dynamodb:${self:provider.region}:${aws:accountId}:table/schools/index/countryCityName-index
        - arn:aws:dynamodb:${self:provider.region}:${aws:accountId}:table/schools/index/countryName-index
        - arn:aws:dynamodb:${self:provider.region}:${aws:accountId}:table/schools/index/globalName-index

    - Effect: Allow
      Action:
        - cognito-idp:SignUp
        - cognito-idp:ConfirmSignUp
        - cognito-idp:InitiateAuth
        - cognito-idp:AdminGetUser
        - cognito-idp:ListUsers          # needed for subâ†’username resolution
        - cognito-idp:AdminUpdateUserAttributes  # for auto-binding school to instructor
      Resource: "*"

functions:
  # ---------- Auth ----------
  signup:
    handler: dist/index.signupHandler
    events:
      - http:
          path: auth/register
          method: post
          cors: true

  login:
    handler: dist/index.loginHandler
    events:
      - http:
          path: auth/login
          method: post
          cors: true

  profile:
    handler: dist/index.profileHandler
    events:
      - http:
          path: auth/profile
          method: get
          cors: true
          authorizer:
            arn: arn:aws:cognito-idp:${self:provider.region}:${aws:accountId}:userpool/${self:provider.environment.USER_POOL_ID}

  confirm:
    handler: dist/index.confirmHandler
    events:
      - http:
          path: auth/confirm
          method: post
          cors: true

  # ---------- Classroom ----------
  createClassroom:
    handler: dist/index.createClassroomHandler
    events:
      - http:
          path: classroom/create
          method: post
          cors: true
          authorizer:
            arn: arn:aws:cognito-idp:${self:provider.region}:${aws:accountId}:userpool/${self:provider.environment.USER_POOL_ID}

  joinClassroom:
    handler: dist/index.joinClassroomHandler
    events:
      - http:
          path: classroom/join
          method: post
          cors: true
          authorizer:
            arn: arn:aws:cognito-idp:${self:provider.region}:${aws:accountId}:userpool/${self:provider.environment.USER_POOL_ID}

  getClassrooms:
    handler: dist/index.getMyClassroomsHandler
    events:
      - http:
          path: classroom/list
          method: get
          cors: true
          authorizer:
            arn: arn:aws:cognito-idp:${self:provider.region}:${aws:accountId}:userpool/${self:provider.environment.USER_POOL_ID}

  getMembers:
    handler: dist/index.getMembersHandler
    events:
      - http:
          path: classroom/members
          method: post
          cors: true
          authorizer:
            arn: arn:aws:cognito-idp:${self:provider.region}:${aws:accountId}:userpool/${self:provider.environment.USER_POOL_ID}

  deleteMembership:
    handler: dist/index.deleteMembershipHandler
    events:
      - http:
          path: classroom/membership
          method: delete
          cors: true
          authorizer:
            arn: arn:aws:cognito-idp:${self:provider.region}:${aws:accountId}:userpool/${self:provider.environment.USER_POOL_ID}

  kickStudent:
    handler: dist/index.kickStudentHandler
    events:
      - http:
          path: classroom/kick
          method: post
          cors: true
          authorizer:
            arn: arn:aws:cognito-idp:${self:provider.region}:${aws:accountId}:userpool/${self:provider.environment.USER_POOL_ID}

  # ---------- Schools ----------
  registerSchool:
    handler: dist/index.registerSchoolHandler
    events:
      - http:
          path: school/register
          method: post
          cors: true
          authorizer:
            arn: arn:aws:cognito-idp:${self:provider.region}:${aws:accountId}:userpool/${self:provider.environment.USER_POOL_ID}

  listSchools:
    handler: dist/index.listSchoolsHandler
    events:
      - http:
          path: schools
          method: get
          cors: true

  getSchool:
    handler: dist/index.getSchoolHandler
    events:
      - http:
          path: schools/{schoolId}
          method: get
          cors: true

plugins:
  - serverless-offline
