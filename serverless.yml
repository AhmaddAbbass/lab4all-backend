service: lab4all-auth

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  environment:
    USER_POOL_ID: us-east-1_H98uAiglK
    CLIENT_ID: 2k3729eh2gm42prsp0siarg0e7
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:Query
        - dynamodb:TransactWriteItems
      Resource:
        - arn:aws:dynamodb:${self:provider.region}:${aws:accountId}:table/classrooms
        - arn:aws:dynamodb:${self:provider.region}:${aws:accountId}:table/classrooms/index/joinCode-index
        - arn:aws:dynamodb:${self:provider.region}:${aws:accountId}:table/memberships
    - Effect: Allow
      Action:
        - cognito-idp:SignUp
        - cognito-idp:ConfirmSignUp
        - cognito-idp:InitiateAuth
        - cognito-idp:AdminGetUser
        - cognito-idp:ListUsers       # needed for subâ†’username resolution
      Resource: "*"

functions:
  signup:
    handler: dist/index.signupHandler
    events:
      - http:
          path: auth/register
          method: post
          cors: true

  login:
    handler: dist/index.loginHandler
    events:
      - http:
          path: auth/login
          method: post
          cors: true

  profile:
    handler: dist/index.profileHandler
    events:
      - http:
          path: auth/profile
          method: get
          cors: true
          authorizer:
            type: COGNITO_USER_POOLS
            userPoolArn: arn:aws:cognito-idp:${self:provider.region}:${aws:accountId}:userpool/${self:provider.environment.USER_POOL_ID}

  confirm:
    handler: dist/index.confirmHandler
    events:
      - http:
          path: auth/confirm
          method: post
          cors: true

  createClassroom:
    handler: dist/index.createClassroomHandler
    events:
      - http:
          path: classroom/create
          method: post
          cors: true
          authorizer:
            type: COGNITO_USER_POOLS
            userPoolArn: arn:aws:cognito-idp:${self:provider.region}:${aws:accountId}:userpool/${self:provider.environment.USER_POOL_ID}

  joinClassroom:
    handler: dist/index.joinClassroomHandler
    events:
      - http:
          path: classroom/join
          method: post
          cors: true
          authorizer:
            type: COGNITO_USER_POOLS
            userPoolArn: arn:aws:cognito-idp:${self:provider.region}:${aws:accountId}:userpool/${self:provider.environment.USER_POOL_ID}

  getClassrooms:
    handler: dist/index.getMyClassroomsHandler
    events:
      - http:
          path: classroom/list
          method: get
          cors: true
          authorizer:
            type: COGNITO_USER_POOLS
            userPoolArn: arn:aws:cognito-idp:${self:provider.region}:${aws:accountId}:userpool/${self:provider.environment.USER_POOL_ID}

  getMembers:
    handler: dist/index.getMembersHandler
    events:
      - http:
          path: classroom/members
          method: post
          cors: true
          authorizer:
            type: COGNITO_USER_POOLS
            userPoolArn: arn:aws:cognito-idp:${self:provider.region}:${aws:accountId}:userpool/${self:provider.environment.USER_POOL_ID}

plugins:
  - serverless-offline
